@page "/"

@inject IJSRuntime jsInterop
@inject IServerService server
@inject NavigationManager navigator



<PageTitle>Authentication</PageTitle>
<div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-xl-10">
            <div class="card rounded-3 text-black">
                <div class="row g-0">
                    <div class="col-lg-6">
                        <div class="card-body p-md-5 mx-md-4">
                            <!--Old link => https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/lotus.webp-->
                            <div class="text-center">
                                <img src="/img/logoDeltaP.gif"
                                     style="width: 120px;" alt="logo">
                                <h4 class="mt-1 mb-5 pb-1">We are The DelataP Team</h4>
                            </div>
                            @if (logInFailed)
                            {
                                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                    @logInFailedMessage
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }
                            <EditForm Model="@user" OnValidSubmit="@LoginAsync">
                                <p>Please login to your account</p>
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-outline mb-4">
                                    <input type="text" id="form2Example11" class="form-control"
                                           placeholder="Phone number or email address" @bind-value="@user.Username" />
                                    <label class="form-label" for="form2Example11">Username</label>
                                </div>

                                <div class="form-outline mb-4">
                                    <input type="password" id="form2Example22" class="form-control" @bind-value="@user.Password" />
                                    <label class="form-label" for="form2Example22">Password</label>
                                </div>

                                <div class="text-center pt-1 mb-5 pb-1">
                                    <button class="btn btn-primary btn-block fa-lg gradient-custom-2 mb-3" type="submit">
                                        Log
                                        in
                                    </button>
                                    <a class="text-muted" href="#!">Forgot password?</a>
                                </div>

                                <div class="d-flex align-items-center justify-content-center pb-4">
                                    <p class="mb-0 me-2">Don't have an account?</p>
                                    <button type="button" class="btn btn-outline-danger">Create new</button>
                                </div>

                            </EditForm>

                        </div>
                    </div>
                    <div class="col-lg-6 d-flex align-items-center gradient-custom-2">
                        <div class="text-white px-3 py-4 p-md-5 mx-md-4">
                            <h4 class="mb-4">We are more than just a company</h4>
                            <p class="small mb-0">
                                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                                tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud
                                exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserDTO user = new();
    private bool logInFailed = false;
    private string logInFailedMessage = default!;

    protected override async Task OnInitializedAsync()
    {
        var token = await jsInterop.InvokeAsync<string>("getData", "token");
        if (string.IsNullOrWhiteSpace(token))
        {
            logInFailedMessage = "Your session has experied";
            navigator.NavigateTo("/");
        }
        else
        {
            navigator.NavigateTo("/home");
        }
    }

    private async Task LoginAsync()
    {
        var res = await server.AuthenticateAsync(user);
        if (res.Status == "SUCCESS")
        {
            GoToHome(res.Data);
        }
        else if (res.Status == "ERROR")
        {
            logInFailedMessage = res.Message;
            logInFailed = true;
        }

        user = new();//reset the form
    }

    private async void GoToHome(string token)
    {
        await jsInterop.InvokeVoidAsync("setData", "token", token);
        navigator.NavigateTo("/home");
    }
}